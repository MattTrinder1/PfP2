parameters:
- name: connectionString
  type: string
- name: suffix
  type: string


steps:
    
- checkout: self

- task: MSCRMToolInstaller@12
  inputs:
    nugetFeed: 'official'
    psFeed: 'official'   

- task: MSCRMGetConfigurationRecord@12
  inputs:
    crmConnectionString: ${{parameters.connectionString}}
    entityName: 'cp_configdatahistory'
    lookupFieldName: 'cp_name'
    valueFieldName: 'cp_value'
    lookupValue: 'CurrentVersion${{parameters.suffix}}'
    existsVariableName: 'configExists'
    valueVariableName: 'currentConfigVersion'

- powershell: |
        $value = Get-Content  -Path $(Build.SourcesDirectory)/ConfigData/Cumbria${{parameters.suffix}}VersionDate.txt 
        Write-Host "##vso[task.setvariable variable=newConfigVersion]$value"

- task: MSCRMImportCMData@12
  displayName: Import Configuration Data
  inputs:
    crmConnectionString: ${{parameters.connectionString}}
    dataFile: $(Build.SourcesDirectory)/ConfigData/Cumbria${{parameters.suffix}}.zip
  condition: ne (variables.newConfigVersion,variables.currentConfigVersion)


- task: MSCRMUpdateConfigurationRecords@12
  inputs:
    crmConnectionString: ${{parameters.connectionString}}
    entityName: 'cp_configdatahistory'
    lookupFieldName: 'cp_name'
    valueFieldName: 'cp_value'
    configurationRecordsJson: '[[''CurrentVersion${{parameters.suffix}}'',''$(newConfigVersion)'']]'
  condition: ne (variables.newConfigVersion,variables.currentConfigVersion)
