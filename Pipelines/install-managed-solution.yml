parameters:
- name: connectionstring
  type: string
- name: pipelineworkspace
  type: string
- name: SolutionFileName
  type: string

steps:

  - ${{ each parameter in parameters }}:
    - ${{ if contains(parameter.Value, 'FileName') }}:

      - powershell:
        displayName: CheckFileExists
              |
              $fileExists = Test-Path -Path '${{parameters.pipelineworkspace}}/${{parameter.Value}}' -PathType leaf
              Write-Output "##vso[task.setvariable variable=FileExists]$fileExists"


      - task: MSCRMImportSolution@11
        displayName: '${{parameter.Value}}'
        inputs:
            crmConnectionString: ${{parameters.connectionstring}}
            solutionFile: '${{parameters.pipelineworkspace}}/${{parameter.Value}}'
            overwriteUnmanagedCustomizations: true
            publishWorkflows: true
            useAsyncMode: false
            asyncWaitTimeout: 1500
        condition: eq(variables['FileExists'],true)
