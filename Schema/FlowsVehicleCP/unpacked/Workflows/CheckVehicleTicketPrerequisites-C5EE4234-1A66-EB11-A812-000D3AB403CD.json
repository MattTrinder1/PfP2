{
  "properties": {
    "connectionReferences": {
      "shared_commondataserviceforapps": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "cp_sharedcommondataserviceforapps_ef737"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_commondataserviceforapps_1": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "cp_sharedcommondataserviceforapps_dbcd7"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      },
      "shared_commondataserviceforapps_2": {
        "runtimeSource": "embedded",
        "connection": {
          "connectionReferenceLogicalName": "new_sharedcommondataserviceforapps_3a446"
        },
        "api": {
          "name": "shared_commondataserviceforapps"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {
            
          },
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {
            
          },
          "type": "SecureObject"
        }
      },
      "triggers": {
        "manual": {
          "metadata": {
            "operationMetadataId": "85200b7c-f097-489c-b2d2-0f9bd00d54c3"
          },
          "type": "Request",
          "kind": "Button",
          "inputs": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "title": "Staging Table Entry Id.",
                  "type": "string",
                  "x-ms-dynamically-added": true,
                  "description": "Please enter your input",
                  "x-ms-content-hint": "TEXT"
                }
              },
              "required": [
                "text"
              ]
            }
          }
        }
      },
      "actions": {
        "Initialize_Error_Message_variable": {
          "runAfter": {
            
          },
          "metadata": {
            "operationMetadataId": "5ee812ef-228c-4b7e-a351-4798b9f7d33e"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Error Message",
                "type": "string",
              "value": "@{null}"
              }
            ]
          }
        },
        "Respond_to_a_PowerApp_or_flow": {
          "runAfter": {
            "If_Vehicle_Ticket_Offences_Exist": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "dacdc8da-6051-41ab-bc09-bf85d1efec3e"
          },
          "type": "Response",
          "kind": "PowerApp",
          "inputs": {
            "statusCode": 200,
            "body": {
              "vehicleticketerrors": "@variables(\u0027Error Message\u0027)"
            },
            "schema": {
              "type": "object",
              "properties": {
                "vehicleticketerrors": {
                  "title": "VehicleTicketErrors",
                  "x-ms-dynamically-added": true,
                  "type": "string"
                }
              }
            }
          }
        },
        "Get_Vehicle_Ticket_STG_row": {
          "runAfter": {
            "Update_a_row_3": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "7d1ff490-d699-4e4f-8c68-2eb7c13a72bc"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "GetItem",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cp_vehicleticketstgs",
            "recordId": "@triggerBody()[\u0027text\u0027]"
            },
            "authentication": "@parameters(\u0027$authentication\u0027)"
          }
        },
        "Check_Speed_Detection_Method_ISNULL": {
          "actions": {
            "Append_to_Error_Message_9": {
              "runAfter": {
                
              },
              "metadata": {
                "operationMetadataId": "2b74d46e-9ea2-43b4-b93f-a88efec2fb09"
              },
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "Error Message",
                "value": "Speed Detection Method cannot be blank\n"
              }
            }
          },
          "runAfter": {
            "Check_TPA_ISNULL": [
              "Succeeded"
            ]
          },
          "expression": {
            "equals": [
              "",
              "@null"
            ]
          },
          "metadata": {
            "operationMetadataId": "a6e74cab-0700-4e03-b67f-47d91f1fa903"
          },
          "type": "If"
        },
        "List_Vehicle_Ticket_Offenses_STG": {
          "runAfter": {
            "Check_Speed_Detection_Method_ISNULL": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "3956b86b-b084-4d96-8b31-dbf8780d436a"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "ListRecords",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cp_vehicleticketoffencesstgs",
            "$filter": "(_cp_vehicleticketstgid_value eq @{outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_vehicleticketstgid\u0027]})"
            },
            "authentication": "@parameters(\u0027$authentication\u0027)"
          }
        },
        "If_Vehicle_Ticket_Offences_Exist": {
          "actions": {
            "Append_to_Error_Message_10": {
              "runAfter": {
                
              },
              "metadata": {
                "operationMetadataId": "036c2b8e-c237-4396-93fd-05278410a0cf"
              },
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "Error Message",
                "value": "Vehicle Ticket should contain at least one Ticket Type.\n"
              }
            }
          },
          "runAfter": {
            "List_Vehicle_Ticket_Offenses_STG": [
              "Succeeded"
            ]
          },
          "else": {
            "actions": {
              "Apply_to_each": {
              "foreach": "@outputs(\u0027List_Vehicle_Ticket_Offenses_STG\u0027)?[\u0027body/value\u0027]",
                "actions": {
                  "Case_-_Traffic_Offense": {
                    "actions": {
                      "If_Line_Error_Found": {
                        "actions": {
                          "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "2404c6d1-904c-4b81-ad31-a74846456706"
                            },
                            "type": "OpenApiConnection",
                            "inputs": {
                              "host": {
                                "connectionName": "shared_commondataserviceforapps",
                                "operationId": "UpdateRecord",
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                              },
                              "parameters": {
                                "entityName": "cp_vehicleticketoffencesstgs",
                              "recordId": "@items(\u0027Apply_to_each\u0027)?[\u0027cp_vehicleticketoffencesstgid\u0027]",
                                "item/cp_stagingentrystatus": 778230002,
                                "item/cp_submissionerror": "@variables(\u0027Line Error\u0027)"
                              },
                              "authentication": "@parameters(\u0027$authentication\u0027)"
                            }
                          },
                          "Set_Line_Error_Found_variable": {
                            "runAfter": {
                              "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "554564b5-60d1-47aa-98fe-9d895a69b5f2"
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Line Error Found",
                              "value": "@true"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Offence_Code_ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "not": {
                            "equals": [
                              "@empty(variables(\u0027Line Error\u0027))",
                              "@true"
                            ]
                          }
                        },
                        "metadata": {
                          "operationMetadataId": "a5725200-5c11-4f0b-82c2-1c6c384cf317"
                        },
                        "type": "If"
                      },
                      "Check_Offence_Code_ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "7c2237ee-e1a4-45fe-b7ad-ba2c52e62366"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Traffic Offence Codes cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          "Condition_2": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_offencecode\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "3ba52b73-fbf8-441e-a270-d5ec7aa8c968"
                        },
                        "type": "If"
                      },
                      "Condition_2": {
                        "actions": {
                          "Check_Offender_Reply_ISNULL": {
                            "actions": {
                              "Append_to_Line_Error_Message_5": {
                                "runAfter": {
                                  
                                },
                                "metadata": {
                                  "operationMetadataId": "0eebaf7e-e048-44f7-81ca-8ee16839b56a"
                                },
                                "type": "AppendToStringVariable",
                                "inputs": {
                                  "name": "Line Error",
                                  "value": "Offender Reply cannot be blank\n"
                                }
                              }
                            },
                            "runAfter": {
                              
                            },
                            "expression": {
                              "equals": [
                              "@items(\u0027Apply_to_each\u0027)?[\u0027cp_offenderreply\u0027]",
                                "@null"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "6f33147b-3eeb-4ff8-9c99-523b595bb86f"
                            },
                            "type": "If"
                          },
                          "Check_NIP_Given_ISNULL_2": {
                            "actions": {
                              "Append_to_Line_Error_Message_2": {
                                "runAfter": {
                                  
                                },
                                "metadata": {
                                  "operationMetadataId": "e6c7c61f-f7aa-4366-a1b2-453c21befc4b"
                                },
                                "type": "AppendToStringVariable",
                                "inputs": {
                                  "name": "Line Error",
                                  "value": "NIP Given cannot be blank\n"
                                }
                              }
                            },
                            "runAfter": {
                              "Check_Offender_Reply_ISNULL": [
                                "Succeeded"
                              ]
                            },
                            "expression": {
                              "equals": [
                              "@items(\u0027Apply_to_each\u0027)?[\u0027cp_nipgiven\u0027]",
                                "@null"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "8f434451-eb2b-4f04-b59c-8d7ceb47ba85"
                            },
                            "type": "If"
                          }
                        },
                        "runAfter": {
                          
                        },
                        "expression": {
                          "not": {
                            "equals": [
                              "@variables(\u0027OffenceCodeCount\u0027)",
                              "@variables(\u0027PersonNotMandatoryCount\u0027)"
                            ]
                          }
                        },
                        "metadata": {
                          "operationMetadataId": "8b08b800-8d86-47d8-85c2-8267d53cea0e"
                        },
                        "type": "If"
                      }
                    },
                    "runAfter": {
                      "Update_Staging_Entry_-_Clear_Staging_Entry_Status,_Submission_Error": [
                        "Succeeded"
                      ]
                    },
                    "expression": {
                      "equals": [
                      "@toLower(items(\u0027Apply_to_each\u0027)?[\u0027cp_tickettype\u0027])",
                        "6245096f-5b39-eb11-bf68-000d3a654276"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "c237a99a-244f-4692-bbca-a5f9c1b63206"
                    },
                    "type": "If"
                  },
                  "Reset_Line_Error_variable": {
                    "runAfter": {
                      
                    },
                    "metadata": {
                      "operationMetadataId": "6a050269-cf6d-46dd-b342-cb6fe2e69653"
                    },
                    "type": "SetVariable",
                    "inputs": {
                      "name": "Line Error",
                    "value": "@{null}"
                    }
                  },
                  "Case_-_VDRS": {
                    "actions": {
                      "Check_VDRS_Offence_Code_ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message_7": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "dafa5759-8006-4f3f-a245-e0d8b8f85daa"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "VDRS Offence Code cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_vdroffencecode\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "24d93755-52cd-4338-a3cb-f43a600963c5"
                        },
                        "type": "If"
                      },
                      "If_Line_Error_Found_1": {
                        "actions": {
                          "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_6": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "2674b811-eb9c-4e3c-a41f-8dc5651e7a83"
                            },
                            "type": "OpenApiConnection",
                            "inputs": {
                              "host": {
                                "connectionName": "shared_commondataserviceforapps",
                                "operationId": "UpdateRecord",
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                              },
                              "parameters": {
                                "entityName": "cp_vehicleticketoffencesstgs",
                              "recordId": "@items(\u0027Apply_to_each\u0027)?[\u0027cp_vehicleticketoffencesstgid\u0027]",
                                "item/cp_stagingentrystatus": 778230002,
                                "item/cp_submissionerror": "@variables(\u0027Line Error\u0027)"
                              },
                              "authentication": "@parameters(\u0027$authentication\u0027)"
                            }
                          },
                          "Set_Line_Error_Found_variable_6": {
                            "runAfter": {
                              "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_6": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "cbb6b81e-2a78-4a22-b91a-a9d9d130ac67"
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Line Error Found",
                              "value": "@true"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_VDRS_Offence_Code_ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "not": {
                            "equals": [
                              "@empty(variables(\u0027Line Error\u0027))",
                              "@true"
                            ]
                          }
                        },
                        "metadata": {
                          "operationMetadataId": "7e13afe5-2d7f-46ef-a8f0-91b0a8005595"
                        },
                        "type": "If"
                      }
                    },
                    "runAfter": {
                      "Case_-_Traffic_Offense": [
                        "Succeeded"
                      ]
                    },
                    "expression": {
                      "equals": [
                      "@items(\u0027Apply_to_each\u0027)?[\u0027cp_tickettype\u0027]",
                        "6445096f-5b39-eb11-bf68-000d3a654276"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "b7f08b16-e1f2-4b7e-acc1-7b0971a0fee0"
                    },
                    "type": "If"
                  },
                  "Case_-_HORT1": {
                    "actions": {
                      "Check_Check_or_Record_ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message_9": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "d4eda39b-05ff-4a2f-add2-cc9a4f8d45ab"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Check or Record cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Document_Type__ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_checkorrecord\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "4b5b9d83-20b3-4fd7-904a-5361d64b1b78"
                        },
                        "type": "If"
                      },
                      "Check_Produce_At_Station_ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message_12": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "884f4c18-6870-42f3-85dc-d4b9e41cc6ed"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Produce at Station cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Check_or_Record_ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_producestation\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "013896e8-8662-45bf-b9c0-e8255a614b99"
                        },
                        "type": "If"
                      },
                      "If_Line_Error_Found_2": {
                        "actions": {
                          "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_2": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "1fc4b715-6fd5-4354-adc7-045bc1fccc26"
                            },
                            "type": "OpenApiConnection",
                            "inputs": {
                              "host": {
                                "connectionName": "shared_commondataserviceforapps",
                                "operationId": "UpdateRecord",
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                              },
                              "parameters": {
                                "entityName": "cp_vehicleticketoffencesstgs",
                              "recordId": "@items(\u0027Apply_to_each\u0027)?[\u0027cp_vehicleticketoffencesstgid\u0027]",
                                "item/cp_stagingentrystatus": 778230002,
                                "item/cp_submissionerror": "@variables(\u0027Line Error\u0027)"
                              },
                              "authentication": "@parameters(\u0027$authentication\u0027)"
                            }
                          },
                          "Set_Line_Error_Found_variable_2": {
                            "runAfter": {
                              "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_2": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "76707b52-606f-4777-b266-05a8739d1038"
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Line Error Found",
                              "value": "@true"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Produce_At_Station_ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "not": {
                            "equals": [
                              "@empty(variables(\u0027Line Error\u0027))",
                              "@true"
                            ]
                          }
                        },
                        "metadata": {
                          "operationMetadataId": "aa7e5224-b268-4b80-aa30-e720808849d5"
                        },
                        "type": "If"
                      },
                      "Check_Document_Type__ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message_8": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "b50c4cb7-532b-41fd-bac8-e2e127dce5d2"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Document Type cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_documenttype\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "3c7738f6-f014-4c03-ae7b-533dd3fdafa0"
                        },
                        "type": "If"
                      }
                    },
                    "runAfter": {
                      "Case_-_VDRS": [
                        "Succeeded"
                      ]
                    },
                    "expression": {
                      "equals": [
                      "@items(\u0027Apply_to_each\u0027)?[\u0027cp_tickettype\u0027]",
                        "5c45096f-5b39-eb11-bf68-000d3a654276"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "b8d7b120-5f2a-4b7c-bd3a-f273ba3c19ef"
                    },
                    "type": "If"
                  },
                  "Case_-_Section_59": {
                    "actions": {
                      "Check_Section_ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message_14": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "250d32d9-a8ad-4d46-b472-acb0f91b6c09"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Section cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_section\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "c9038c40-c94e-427b-bc21-ef17c15a2e4e"
                        },
                        "type": "If"
                      },
                      "If_Line_Error_Found_3": {
                        "actions": {
                          "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_3": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "2a8ac04d-3281-4de0-981d-3a793924ea7d"
                            },
                            "type": "OpenApiConnection",
                            "inputs": {
                              "host": {
                                "connectionName": "shared_commondataserviceforapps",
                                "operationId": "UpdateRecord",
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                              },
                              "parameters": {
                                "entityName": "cp_vehicleticketoffencesstgs",
                              "recordId": "@items(\u0027Apply_to_each\u0027)?[\u0027cp_vehicleticketoffencesstgid\u0027]",
                                "item/cp_stagingentrystatus": 778230002,
                                "item/cp_submissionerror": "@variables(\u0027Line Error\u0027)"
                              },
                              "authentication": "@parameters(\u0027$authentication\u0027)"
                            }
                          },
                          "Set_Line_Error_Found_variable_3": {
                            "runAfter": {
                              "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_3": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "59e0bf6a-a01a-4dbe-9388-94b1f5b7e364"
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Line Error Found",
                              "value": "@true"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Section_ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "not": {
                            "equals": [
                              "@empty(variables(\u0027Line Error\u0027))",
                              "@true"
                            ]
                          }
                        },
                        "metadata": {
                          "operationMetadataId": "1db6eacf-453d-4235-80ca-101831b4d8ca"
                        },
                        "type": "If"
                      }
                    },
                    "runAfter": {
                      "Case_-_HORT1": [
                        "Succeeded"
                      ]
                    },
                    "expression": {
                      "equals": [
                      "@items(\u0027Apply_to_each\u0027)?[\u0027cp_tickettype\u0027]",
                        "6045096f-5b39-eb11-bf68-000d3a654276"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "d59ce026-ee07-4cb1-8e71-ca1c058b4c61"
                    },
                    "type": "If"
                  },
                  "Case_-_Section_163": {
                    "actions": {
                      "Check_Reason_for_Using_S163_ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message_17": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "31e3f6ff-0835-40b9-a254-ab4036e323e7"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Reason for Using S163 cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Outcome_of_Stop_ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_reasonforusings163power\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "92b76c38-0e96-4588-9730-08e91f1ff00e"
                        },
                        "type": "If"
                      },
                      "Check_Outcome_of_Stop_ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message_16": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "0a7a43cd-e3fe-48ed-a91b-2589dbcf6fcc"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Outcome of Stop cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_outcomeofstop\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "8fe94224-679a-4871-9851-f778ce89f2f3"
                        },
                        "type": "If"
                      },
                      "If_Line_Error_Found_4": {
                        "actions": {
                          "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_4": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "fc45d737-30c9-4877-8fd1-2fc335492101"
                            },
                            "type": "OpenApiConnection",
                            "inputs": {
                              "host": {
                                "connectionName": "shared_commondataserviceforapps",
                                "operationId": "UpdateRecord",
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                              },
                              "parameters": {
                                "entityName": "cp_vehicleticketoffencesstgs",
                              "recordId": "@items(\u0027Apply_to_each\u0027)?[\u0027cp_vehicleticketoffencesstgid\u0027]",
                                "item/cp_stagingentrystatus": 778230002,
                                "item/cp_submissionerror": "@variables(\u0027Line Error\u0027)"
                              },
                              "authentication": "@parameters(\u0027$authentication\u0027)"
                            }
                          },
                          "Set_Line_Error_Found_variable_4": {
                            "runAfter": {
                              "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_4": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "ef0db9e0-a2e9-46b3-9e0d-00a59aa5ae33"
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Line Error Found",
                              "value": "@true"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Reason_for_Using_S163_ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "not": {
                            "equals": [
                              "@empty(variables(\u0027Line Error\u0027))",
                              "@true"
                            ]
                          }
                        },
                        "metadata": {
                          "operationMetadataId": "869a47ed-9eec-4dc6-8c0a-7dda00edbb62"
                        },
                        "type": "If"
                      }
                    },
                    "runAfter": {
                      "Case_-_Section_59": [
                        "Succeeded"
                      ]
                    },
                    "expression": {
                      "equals": [
                      "@items(\u0027Apply_to_each\u0027)?[\u0027cp_tickettype\u0027]",
                        "9bdd1977-de5f-eb11-a812-0022489c79d7"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "37eb2f43-35d7-4996-b764-a6046d49f7dc"
                    },
                    "type": "If"
                  },
                  "Case_-_Section_165": {
                    "actions": {
                      "Check_Recovery_Garage_ISNULL_2": {
                        "actions": {
                          "Append_to_Line_Error_Message_19": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "e5fbe5cd-b1cd-4de4-b5e1-64164957f42c"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Recovery Garage cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_s165recoverygarage\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "83605e3f-4da4-40a6-a8ec-eac3614516e8"
                        },
                        "type": "If"
                      },
                      "If_Line_Error_Found_5": {
                        "actions": {
                          "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_5": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "5f37ba8f-1793-4854-9a7e-e43611f9f19b"
                            },
                            "type": "OpenApiConnection",
                            "inputs": {
                              "host": {
                                "connectionName": "shared_commondataserviceforapps",
                                "operationId": "UpdateRecord",
                                "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                              },
                              "parameters": {
                                "entityName": "cp_vehicleticketoffencesstgs",
                              "recordId": "@items(\u0027Apply_to_each\u0027)?[\u0027cp_vehicleticketoffencesstgid\u0027]",
                                "item/cp_stagingentrystatus": 778230002,
                                "item/cp_submissionerror": "@variables(\u0027Line Error\u0027)"
                              },
                              "authentication": "@parameters(\u0027$authentication\u0027)"
                            }
                          },
                          "Set_Line_Error_Found_variable_5": {
                            "runAfter": {
                              "Update_Vehicle_Ticket_Offence_STG_row_(Staging_Entry_Status,_Submittion_Error)_5": [
                                "Succeeded"
                              ]
                            },
                            "metadata": {
                              "operationMetadataId": "b909f404-6d09-47c1-8cd3-99a0da04bfd7"
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Line Error Found",
                              "value": "@true"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Without_ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "not": {
                            "equals": [
                              "@empty(variables(\u0027Line Error\u0027))",
                              "@true"
                            ]
                          }
                        },
                        "metadata": {
                          "operationMetadataId": "3813abf7-2c70-4bf9-ab11-886f095681ce"
                        },
                        "type": "If"
                      },
                      "Check_Designated_Station_ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message_20": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "00f83107-7fa5-407c-bc1d-859911855f8f"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Designated Station cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Recovery_Garage_ISNULL_2": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_designatedstation\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "4293ce75-b468-4611-b583-f69be48d1843"
                        },
                        "type": "If"
                      },
                      "Check_Without_ISNULL": {
                        "actions": {
                          "Append_to_Line_Error_Message_21": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "efb36840-d597-4ade-b5f7-131c8c28812e"
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                              "name": "Line Error",
                              "value": "Without cannot be blank\n"
                            }
                          }
                        },
                        "runAfter": {
                          "Check_Designated_Station_ISNULL": [
                            "Succeeded"
                          ]
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each\u0027)?[\u0027cp_without\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "49ce2f6b-9776-4905-bada-aa77bff78adb"
                        },
                        "type": "If"
                      }
                    },
                    "runAfter": {
                      "Case_-_Section_163": [
                        "Succeeded"
                      ]
                    },
                    "expression": {
                      "equals": [
                      "@items(\u0027Apply_to_each\u0027)?[\u0027cp_tickettype\u0027]",
                        "5e45096f-5b39-eb11-bf68-000d3a654276"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "4ba6d50f-6942-44e0-ab1d-d0e739725e73"
                    },
                    "type": "If"
                  },
                  "Update_Staging_Entry_-_Clear_Staging_Entry_Status,_Submission_Error": {
                    "runAfter": {
                      "Reset_Line_Error_variable": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "9ec19300-305b-4937-8ced-b7f2ee903d2d"
                    },
                    "type": "OpenApiConnection",
                    "inputs": {
                      "host": {
                        "connectionName": "shared_commondataserviceforapps_1",
                        "operationId": "UpdateRecord",
                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                      },
                      "parameters": {
                        "entityName": "cp_vehicleticketoffencesstgs",
                      "recordId": "@items(\u0027Apply_to_each\u0027)?[\u0027cp_vehicleticketoffencesstgid\u0027]",
                        "item/cp_stagingentrystatus": 778230001,
                        "item/cp_submissionerror": "@null"
                      },
                      "authentication": "@parameters(\u0027$authentication\u0027)"
                    }
                  }
                },
                "runAfter": {
                  
                },
                "metadata": {
                  "operationMetadataId": "458444fc-c7e0-47cf-8b57-d0a73549f217"
                },
                "type": "Foreach"
              },
              "If_Error_Messages_found": {
                "actions": {
                  "Append_to_global_Error_Message_variable": {
                    "runAfter": {
                      
                    },
                    "metadata": {
                      "operationMetadataId": "0e913510-ca07-4a88-a713-370182c9c163"
                    },
                    "type": "AppendToStringVariable",
                    "inputs": {
                      "name": "Error Message",
                      "value": "Missing data in Vehicle Ticket Offences! Check the respective entries to identify the issues."
                    }
                  }
                },
                "runAfter": {
                  "Apply_to_each": [
                    "Succeeded"
                  ]
                },
                "expression": {
                  "equals": [
                    "@variables(\u0027Line Error Found\u0027)",
                    "@true"
                  ]
                },
                "metadata": {
                  "operationMetadataId": "ed95af85-0780-4e4f-b1c7-10592638ca47"
                },
                "type": "If"
              }
            }
          },
          "expression": {
            "equals": [
            "@empty(outputs(\u0027List_Vehicle_Ticket_Offenses_STG\u0027)?[\u0027body/value\u0027])",
              "@true"
            ]
          },
          "metadata": {
            "operationMetadataId": "49b72916-6367-4093-8fd7-925f69b01b32"
          },
          "type": "If"
        },
        "Initialize_Line_Error_Found_variable": {
          "runAfter": {
            "Initialize_Error_Message_variable": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "5d632802-53b8-4df6-8e63-f0cb0390cb78"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Line Error Found",
                "type": "boolean",
                "value": "@false"
              }
            ]
          }
        },
        "Initialize_Line_Error_variable": {
          "runAfter": {
            "Initialize_Line_Error_Found_variable": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "8eb4dc8d-cf8a-4870-af28-40c02d9279b3"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Line Error",
                "type": "string",
              "value": "@{null}"
              }
            ]
          }
        },
        "Check_Offence_DateTime_ISNULL": {
          "actions": {
            "Append_to_Error_Message_7": {
              "runAfter": {
                
              },
              "metadata": {
                "operationMetadataId": "b12961ce-9b66-4cc8-b3f2-513dbcef0ef3"
              },
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "Error Message",
                "value": "Offence Date/Time cannot be blank\n"
              }
            }
          },
          "runAfter": {
            "Get_Vehicle_Ticket_STG_row": [
              "Succeeded"
            ]
          },
          "expression": {
            "equals": [
            "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_offencedatetime\u0027]",
              "@null"
            ]
          },
          "metadata": {
            "operationMetadataId": "b6878e29-e977-4c1e-9c91-ab89f235b721"
          },
          "type": "If"
        },
        "Check_Reason_for_Stopping_ISNULL": {
          "actions": {
            "Append_to_Error_Message_8": {
              "runAfter": {
                
              },
              "metadata": {
                "operationMetadataId": "ffb6b94d-6831-4f4d-82b8-07d1276185bb"
              },
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "Error Message",
                "value": "Reason for Stopping cannot be blank\n"
              }
            }
          },
          "runAfter": {
            "Check_Offence_DateTime_ISNULL": [
              "Succeeded"
            ]
          },
          "expression": {
            "equals": [
            "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_reasonforstopping\u0027]",
              "@null"
            ]
          },
          "metadata": {
            "operationMetadataId": "239b8f04-ff1d-4da0-ac35-5eccec5979bd"
          },
          "type": "If"
        },
        "Check_Issued_To_ISNULL": {
          "actions": {
            "Append_to_Error_Message_6": {
              "runAfter": {
                
              },
              "metadata": {
                "operationMetadataId": "a4e1453f-d950-49c3-aed1-5136c773492d"
              },
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "Error Message",
                "value": "Issued To cannot be blank\n"
              }
            }
          },
          "runAfter": {
            "Check_Reason_for_Stopping_ISNULL": [
              "Succeeded"
            ]
          },
          "expression": {
            "equals": [
            "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_issuedto\u0027]",
              "@null"
            ]
          },
          "metadata": {
            "operationMetadataId": "ac7c8959-d98f-48c6-b044-c8709a868fc3"
          },
          "type": "If"
        },
        "Check_Location_Details_ISNULL": {
          "actions": {
            "Append_to_Error_Message_16": {
              "runAfter": {
                
              },
              "metadata": {
                "operationMetadataId": "4f1580cd-6e5e-42a2-b718-7bd918c4bc38"
              },
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "Error Message",
                "value": "Required Location Details are missing!\n"
              }
            }
          },
          "runAfter": {
            "Validate_Vehicle_if_issued_to_!=_rider_of_bicycle": [
              "Succeeded"
            ]
          },
          "expression": {
            "or": [
              {
                "equals": [
                "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_locationdescription\u0027]",
                  "@null"
                ]
              },
              {
                "equals": [
                "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_locationstreet\u0027]",
                  ""
                ]
              },
              {
                "equals": [
                "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_locationtown\u0027]",
                  ""
                ]
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "6671c0b2-4a2d-413f-85fb-452cb9bc4512"
          },
          "type": "If"
        },
        "Check_TPA_ISNULL": {
          "actions": {
            "Append_to_Error_Message_17": {
              "runAfter": {
                
              },
              "metadata": {
                "operationMetadataId": "c84064cb-71a6-4771-be3f-c4f127e0c815"
              },
              "type": "AppendToStringVariable",
              "inputs": {
                "name": "Error Message",
                "value": "TPA cannot be blank\n"
              }
            }
          },
          "runAfter": {
            "Check_Location_Details_ISNULL": [
              "Succeeded"
            ]
          },
          "expression": {
            "equals": [
            "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_tpa\u0027]",
              "@null"
            ]
          },
          "metadata": {
            "operationMetadataId": "1abcdebd-b512-41db-b109-9f570c61e12e"
          },
          "type": "If"
        },
        "List_Vehicle_Ticket_Offenses_STG_2": {
          "runAfter": {
            "Initialize_VehicleMandatory_to_true": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "0f928454-6363-4834-add8-5eef875b74a9"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps",
              "operationId": "ListRecords",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cp_vehicleticketoffencesstgs",
            "$filter": "(_cp_vehicleticketstgid_value eq @{outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_vehicleticketstgid\u0027]} and cp_tickettype eq \u00276245096f-5b39-eb11-bf68-000d3a654276\u0027)"
            },
            "authentication": "@parameters(\u0027$authentication\u0027)"
          }
        },
        "Initialize_variable": {
          "runAfter": {
            "Check_Issued_To_ISNULL": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "ece2a46f-4a83-4895-8f61-f2da9e2a0507"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ValidateOffender",
                "type": "boolean",
                "value": true
              }
            ]
          }
        },
        "If_Vehicle_Ticket_Traffic_Offences_Exist_2": {
          "actions": {
            
          },
          "runAfter": {
            "List_Vehicle_Ticket_Offenses_STG_2": [
              "Succeeded"
            ]
          },
          "else": {
            "actions": {
              "Apply_to_each_2": {
              "foreach": "@outputs(\u0027List_Vehicle_Ticket_Offenses_STG_2\u0027)?[\u0027body/value\u0027]",
                "actions": {
                  "Case_-_Traffic_Offense_2": {
                    "actions": {
                      "Check_Offence_Code_ISNULL_2": {
                        "actions": {
                          "Set_variable": {
                            "runAfter": {
                              
                            },
                            "metadata": {
                              "operationMetadataId": "666df940-2917-43d7-bd79-69f9d55b2a11"
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "OffenceCodeMissing",
                              "value": true
                            }
                          }
                        },
                        "runAfter": {
                          
                        },
                        "else": {
                          "actions": {
                            "SplitOffenceCode": {
                              "runAfter": {
                                
                              },
                              "metadata": {
                                "operationMetadataId": "f6c926ba-c0b1-4d49-8ba4-2bba989f1b55"
                              },
                              "type": "Compose",
                            "inputs": "@split(items(\u0027Apply_to_each_2\u0027)?[\u0027cp_offencecode\u0027], \u0027,\u0027)"
                            },
                            "Apply_to_each_3": {
                              "foreach": "@outputs(\u0027SplitOffenceCode\u0027)",
                              "actions": {
                                "List_rows": {
                                  "runAfter": {
                                    
                                  },
                                  "metadata": {
                                    "operationMetadataId": "7d2b997b-403d-4d85-aaae-8d99c7e90dd7"
                                  },
                                  "type": "OpenApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connectionName": "shared_commondataserviceforapps_2",
                                      "operationId": "ListRecords",
                                      "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                                    },
                                    "parameters": {
                                      "entityName": "cp_offencecodes",
                                    "$filter": "cp_offencecodeid eq @{items(\u0027Apply_to_each_3\u0027)}"
                                    },
                                    "authentication": "@parameters(\u0027$authentication\u0027)"
                                  }
                                },
                                "Apply_to_each_4": {
                                "foreach": "@outputs(\u0027List_rows\u0027)?[\u0027body/value\u0027]",
                                  "actions": {
                                    "Condition": {
                                      "actions": {
                                        "Increment_variable_2": {
                                          "runAfter": {
                                            
                                          },
                                          "metadata": {
                                            "operationMetadataId": "047be58f-b205-4643-8856-63b7b2a0b395"
                                          },
                                          "type": "IncrementVariable",
                                          "inputs": {
                                            "name": "PersonNotMandatoryCount",
                                            "value": 1
                                          }
                                        }
                                      },
                                      "runAfter": {
                                        
                                      },
                                      "expression": {
                                        "equals": [
                                        "@items(\u0027Apply_to_each_4\u0027)?[\u0027cp_personnotmandatory\u0027]",
                                          true
                                        ]
                                      },
                                      "metadata": {
                                        "operationMetadataId": "593beb63-6cc8-478d-b113-92e73cc59b53"
                                      },
                                      "type": "If"
                                    }
                                  },
                                  "runAfter": {
                                    "Increment_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "metadata": {
                                    "operationMetadataId": "51215e8d-f411-4a8c-b3f9-ebea11ced5d0"
                                  },
                                  "type": "Foreach"
                                },
                                "Increment_variable": {
                                  "runAfter": {
                                    "List_rows": [
                                      "Succeeded"
                                    ]
                                  },
                                  "metadata": {
                                    "operationMetadataId": "46e8a410-2dfc-45e7-a8b0-2bc06c86043e"
                                  },
                                  "type": "IncrementVariable",
                                  "inputs": {
                                    "name": "OffenceCodeCount",
                                    "value": 1
                                  }
                                }
                              },
                              "runAfter": {
                                "SplitOffenceCode": [
                                  "Succeeded"
                                ]
                              },
                              "metadata": {
                                "operationMetadataId": "47ad7652-9151-46a3-a493-8b430b4ab47e"
                              },
                              "type": "Foreach"
                            }
                          }
                        },
                        "expression": {
                          "equals": [
                          "@items(\u0027Apply_to_each_2\u0027)?[\u0027cp_offencecode\u0027]",
                            "@null"
                          ]
                        },
                        "metadata": {
                          "operationMetadataId": "2da2a716-5aa2-4b3d-a2a1-4af92aabe382"
                        },
                        "type": "If"
                      }
                    },
                    "runAfter": {
                      
                    },
                    "expression": {
                      "equals": [
                      "@items(\u0027Apply_to_each_2\u0027)?[\u0027cp_tickettype\u0027]",
                        "6245096f-5b39-eb11-bf68-000d3a654276"
                      ]
                    },
                    "metadata": {
                      "operationMetadataId": "a939edfd-7961-4c22-b3b1-e4074908657b"
                    },
                    "type": "If"
                  }
                },
                "runAfter": {
                  
                },
                "metadata": {
                  "operationMetadataId": "4a5e2d9e-2988-44cd-871e-1d13aaf196cc"
                },
                "type": "Foreach"
              }
            }
          },
          "expression": {
            "equals": [
            "@empty(outputs(\u0027List_Vehicle_Ticket_Offenses_STG_2\u0027)?[\u0027body/value\u0027])",
              "@true"
            ]
          },
          "metadata": {
            "operationMetadataId": "561d7a4f-3b71-4f35-8909-df944b90147b"
          },
          "type": "If"
        },
        "Initialize_variable_2": {
          "runAfter": {
            "Initialize_variable": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "704469df-6dfd-42a0-8d7d-25d31f0b52f3"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "PersonNotMandatoryCount",
                "type": "integer",
                "value": 0
              }
            ]
          }
        },
        "Initialize_variable_3": {
          "runAfter": {
            "Initialize_variable_2": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "b54b1358-ab9c-4c0e-86da-2914432c7082"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "OffenceCodeCount",
                "type": "integer",
                "value": 0
              }
            ]
          }
        },
        "If_validate_person": {
          "actions": {
            "Check_Offender_Details_ISNULL": {
              "actions": {
                "Append_to_Error_Message_11": {
                  "runAfter": {
                    
                  },
                  "metadata": {
                    "operationMetadataId": "8eaf6a3b-775e-42c8-8172-8c76de1d7e9a"
                  },
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Error Message",
                    "value": "Required Offender Details are missing!\n"
                  }
                }
              },
              "runAfter": {
                
              },
              "expression": {
                "or": [
                  {
                    "equals": [
                    "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_title\u0027]",
                      "@null"
                    ]
                  },
                  {
                    "equals": [
                    "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_forname\u0027]",
                      "@null"
                    ]
                  },
                  {
                    "equals": [
                    "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_surname\u0027]",
                      ""
                    ]
                  },
                  {
                    "equals": [
                    "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_housename\u0027]",
                      ""
                    ]
                  },
                  {
                    "equals": [
                    "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_street\u0027]",
                      ""
                    ]
                  },
                  {
                    "equals": [
                    "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_postcode\u0027]",
                      ""
                    ]
                  },
                  {
                    "equals": [
                    "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_country\u0027]",
                      ""
                    ]
                  }
                ]
              },
              "metadata": {
                "operationMetadataId": "607ef5d4-2788-45c3-a65c-d74ff20b3ff6"
              },
              "type": "If"
            },
            "Update_a_row": {
              "runAfter": {
                "Check_Offender_Details_ISNULL": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "46c3e544-eb0e-46ba-9e2c-07c6ace4645c"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_commondataserviceforapps_2",
                  "operationId": "UpdateRecord",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                },
                "parameters": {
                  "entityName": "cp_vehicleticketstgs",
                "recordId": "@triggerBody()[\u0027text\u0027]",
                  "item/cp_personnotmandatory": false
                },
                "authentication": "@parameters(\u0027$authentication\u0027)"
              }
            }
          },
          "runAfter": {
            "If_Vehicle_Ticket_Traffic_Offences_Exist_2": [
              "Succeeded"
            ]
          },
          "else": {
            "actions": {
              "Condition_3": {
                "actions": {
                  "Update_a_row_2": {
                    "runAfter": {
                      
                    },
                    "metadata": {
                      "operationMetadataId": "48345332-44a5-4621-9b0c-afe9b17b78dd"
                    },
                    "type": "OpenApiConnection",
                    "inputs": {
                      "host": {
                        "connectionName": "shared_commondataserviceforapps_2",
                        "operationId": "UpdateRecord",
                        "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
                      },
                      "parameters": {
                        "entityName": "cp_vehicleticketstgs",
                      "recordId": "@triggerBody()[\u0027text\u0027]",
                        "item/cp_personnotmandatory": true
                      },
                      "authentication": "@parameters(\u0027$authentication\u0027)"
                    }
                  }
                },
                "runAfter": {
                  
                },
                "expression": {
                  "equals": [
                    "@variables(\u0027OffenceCodeMissing\u0027)",
                    false
                  ]
                },
                "metadata": {
                  "operationMetadataId": "fcbeb61a-7859-4276-ac5e-93e14f6cbd86"
                },
                "type": "If"
              }
            }
          },
          "expression": {
            "or": [
              {
                "not": {
                  "equals": [
                    "@variables(\u0027OffenceCodeCount\u0027)",
                    "@variables(\u0027PersonNotMandatoryCount\u0027)"
                  ]
                }
              },
              {
                "equals": [
                  "@variables(\u0027OffenceCodeCount\u0027)",
                  0
                ]
              }
            ]
          },
          "metadata": {
            "operationMetadataId": "8d88f5cd-0343-4d6b-9795-f5c744ac4df4"
          },
          "type": "If"
        },
        "Initialize_variable_4": {
          "runAfter": {
            "Initialize_variable_3": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "a42ff088-f0c9-438f-afdd-5ce0f37f8223"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "OffenceCodeMissing",
                "type": "boolean",
                "value": false
              }
            ]
          }
        },
        "Update_a_row_3": {
          "runAfter": {
            "Initialize_Line_Error_variable": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "db9ec43a-8b7a-4a74-bb82-c18fc83a1f0f"
          },
          "type": "OpenApiConnection",
          "inputs": {
            "host": {
              "connectionName": "shared_commondataserviceforapps_2",
              "operationId": "UpdateRecord",
              "apiId": "/providers/Microsoft.PowerApps/apis/shared_commondataserviceforapps"
            },
            "parameters": {
              "entityName": "cp_vehicleticketstgs",
            "recordId": "@triggerBody()[\u0027text\u0027]",
              "item/cp_personnotmandatory": false
            },
            "authentication": "@parameters(\u0027$authentication\u0027)"
          }
        },
        "Initialize_VehicleMandatory_to_true": {
          "runAfter": {
            "Initialize_variable_4": [
              "Succeeded"
            ]
          },
          "metadata": {
            "operationMetadataId": "c04e9419-a26d-452a-b41e-7806c729841d"
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "VehicleMandatory",
                "type": "boolean",
                "value": true
              }
            ]
          }
        },
        "Validate_Vehicle_if_issued_to_!=_rider_of_bicycle": {
          "actions": {
            "Check_VRM_ISNULL_2": {
              "actions": {
                "Append_to_Error_Message_14": {
                  "runAfter": {
                    
                  },
                  "metadata": {
                    "operationMetadataId": "820f8d5c-e362-476c-bdb0-8904457022cb"
                  },
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Error Message",
                    "value": "VRM cannot be blank\n"
                  }
                }
              },
              "runAfter": {
                
              },
              "expression": {
                "equals": [
                "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_vrm\u0027]",
                  "@null"
                ]
              },
              "metadata": {
                "operationMetadataId": "12b23d7d-2c11-482c-a290-b39853c85919"
              },
              "type": "If"
            },
            "Check_Vehicle_Make_ISNULL_2": {
              "actions": {
                "Append_to_Error_Message": {
                  "runAfter": {
                    
                  },
                  "metadata": {
                    "operationMetadataId": "2d325227-2a34-4439-bb6b-97620333ae3a"
                  },
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Error Message",
                    "value": "Vehicle Make cannot be blank\n"
                  }
                }
              },
              "runAfter": {
                "Check_VRM_ISNULL_2": [
                  "Succeeded"
                ]
              },
              "expression": {
                "equals": [
                "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_vehiclemake\u0027]",
                  "@null"
                ]
              },
              "metadata": {
                "operationMetadataId": "59f71b92-68d1-4ff0-9cee-5db753711f1c"
              },
              "type": "If"
            },
            "Check_Vehicle_Make__Other_ISNULL_2": {
              "actions": {
                "Append_to_Error_Message_15": {
                  "runAfter": {
                    
                  },
                  "metadata": {
                    "operationMetadataId": "bb9f37e7-8535-4a63-9e9b-8c23e957c1f2"
                  },
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Error Message",
                    "value": "Vehicle Make Other cannot be blank when selected Vehicle Make is \u0027Other\u0027\n"
                  }
                }
              },
              "runAfter": {
                "Check_Vehicle_Make_ISNULL_2": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                    "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_vehiclemake\u0027]",
                      "c4a83c6e-cf5f-eb11-89f5-000d3a654276\n"
                    ]
                  },
                  {
                    "equals": [
                    "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_vehiclemakeother\u0027]",
                      "@null"
                    ]
                  }
                ]
              },
              "metadata": {
                "operationMetadataId": "0cd86149-1aa8-4d09-a7f3-4fc389f10008"
              },
              "type": "If"
            },
            "Check_Vehicle_Model_ISNULL_2": {
              "actions": {
                "Append_to_Error_Message_18": {
                  "runAfter": {
                    
                  },
                  "metadata": {
                    "operationMetadataId": "3ee85a63-9cdf-40c1-ae60-40c827fc6bac"
                  },
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Error Message",
                    "value": "Vehicle Model cannot be blank\n"
                  }
                }
              },
              "runAfter": {
                "Check_Vehicle_Make__Other_ISNULL_2": [
                  "Succeeded"
                ]
              },
              "expression": {
                "equals": [
                "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_vehiclemodel\u0027]",
                  "@null"
                ]
              },
              "metadata": {
                "operationMetadataId": "12d7a71d-b733-4525-aea8-31d29ca8aeab"
              },
              "type": "If"
            },
            "Check_Vehicle_Color_ISNULL_2": {
              "actions": {
                "Append_to_Error_Message_19": {
                  "runAfter": {
                    
                  },
                  "metadata": {
                    "operationMetadataId": "83597b1f-d654-4535-803d-117cde62269f"
                  },
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Error Message",
                    "value": "Vehicle Color cannot be blank\n"
                  }
                }
              },
              "runAfter": {
                "Check_Vehicle_Model_ISNULL_2": [
                  "Succeeded"
                ]
              },
              "expression": {
                "equals": [
                "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_vehiclecolour\u0027]",
                  "@null"
                ]
              },
              "metadata": {
                "operationMetadataId": "166ab2c4-cef1-4ec4-b229-6b27f9b1c093"
              },
              "type": "If"
            },
            "Check_Restricted_Vehicle_ISNULL_2": {
              "actions": {
                "Append_to_Error_Message_20": {
                  "runAfter": {
                    
                  },
                  "metadata": {
                    "operationMetadataId": "9184dbe1-aceb-4b85-9d21-501e5f054fb2"
                  },
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Error Message",
                    "value": "Restricted Vehicle cannot be blank\n"
                  }
                }
              },
              "runAfter": {
                "Check_Vehicle_Color_ISNULL_2": [
                  "Succeeded"
                ]
              },
              "expression": {
                "equals": [
                "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_restrictedvehicle\u0027]",
                  "@null"
                ]
              },
              "metadata": {
                "operationMetadataId": "f53da93e-032e-4cec-9463-f7edb3225abe"
              },
              "type": "If"
            },
            "Check_Manual_Transmission_ISNULL_2": {
              "actions": {
                "Append_to_Error_Message_21": {
                  "runAfter": {
                    
                  },
                  "metadata": {
                    "operationMetadataId": "02287000-2d53-4efd-ba8b-21e908c360bf"
                  },
                  "type": "AppendToStringVariable",
                  "inputs": {
                    "name": "Error Message",
                    "value": "Manual Transmission cannot be blank\n"
                  }
                }
              },
              "runAfter": {
                "Check_Restricted_Vehicle_ISNULL_2": [
                  "Succeeded"
                ]
              },
              "expression": {
                "equals": [
                "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_manualtransmission\u0027]",
                  "@null"
                ]
              },
              "metadata": {
                "operationMetadataId": "94b01ec2-ac78-4ac0-89c6-0448a00baab1"
              },
              "type": "If"
            }
          },
          "runAfter": {
            "If_validate_person": [
              "Succeeded"
            ]
          },
          "expression": {
            "not": {
              "equals": [
              "@outputs(\u0027Get_Vehicle_Ticket_STG_row\u0027)?[\u0027body/cp_issuedto\u0027]",
                "fca53c6e-cf5f-eb11-89f5-000d3a654276"
              ]
            }
          },
          "metadata": {
            "operationMetadataId": "d70f1713-6c3d-46b1-8772-4686b670cef2"
          },
          "type": "If"
        }
      },
      "outputs": {
        
      }
    }
  },
  "schemaVersion": "1.0.0.0"
}
